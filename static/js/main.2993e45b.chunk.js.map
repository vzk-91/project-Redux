{"version":3,"sources":["reducer/blogersReducer.js","reducer/loginPageReducer.js","reducer/registrationPageReducer.js","reducer/workspacePageReducer.js","reducer/spinerReducer.js","reducer/userIDReducer.js","reducer/postsReducer.js","reducer/reducers.js","store/store.js","context/context.js","services/storage.js","api/people.js","api/post.js","api/index.js","actions/home.action.js","actions/login.action.js","actions/workspace.action.js","screens/home/Blogers/Blogers.jsx","actions/spinner.action.js","screens/home/Post/Posts.jsx","screens/home/Home.jsx","screens/Login/Login.jsx","screens/nav/nav.jsx","screens/Registration/Registration.jsx","actions/registration.action.js","screens/WorkSpace/items.jsx","screens/WorkSpace/Modal.jsx","screens/WorkSpace/header.jsx","screens/WorkSpace/WorkSpace.jsx","screens/Footer/Footer.jsx","screens/Login/logout.jsx","App.js","serviceWorker.js","index.js"],"names":["initialState","blogers","blogerReducer","state","action","type","payload","loginData","password","email","id","loginPageReducer","registrationData","lastname","username","registrationPageReducer","name","newPost","description","title","modalShow","workspacePageReducer","loading","spinerReducer","userIDReducer","posts","author","postReducer","reducers","combineReducers","blogersReducer","loginPage","registrationPage","workspacePage","spinner","userID","store","createStore","getState","context","React","createContext","Storage","key","data","value","JSON","stringify","localStorage","setItem","err","Error","message","response","getItem","parse","removeItem","People","fetch","then","json","method","body","headers","Post","api","this","people","post","getPeople","getPost","login","registration","byId","getPostById","logOut","remove","postsFetchAction","idAction","memo","useContext","dispatch","useEffect","blogersFetchAction","className","Spinner","animation","variant","map","item","src","avatar","alt","props","console","log","hendleFormChange","event","target","loginAction","Form","Group","controlId","Label","Control","placeholder","onChange","Check","label","Button","onClick","status","alert","info","token","userId","set","history","push","catch","error","Nav","fill","Item","Link","href","registrationAction","itemId","ModalWindow","show","handleClose","personId","newPostAction","Modal","onHide","Header","closeButton","Title","Body","as","rows","Footer","handleShow","get","user","getNameAction","LogOut","App","Provider","path","render","routeprops","Boolean","window","location","hostname","match","rerender","ReactDOM","bind","document","getElementById","subscribe","navigator","serviceWorker","ready","unregister"],"mappings":"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","file":"static/js/main.2993e45b.chunk.js","sourcesContent":["\r\nlet initialState = {\r\n    blogers: [],\r\n    \r\n}\r\n\r\nconst blogerReducer = (state = initialState,action) =>{\r\n    switch (action.type) {\r\n        case \"Fetch_Blogers\":\r\n            return {\r\n                ...state,\r\n                blogers: [...action.payload]\r\n            }\r\n            default:\r\n                return state;\r\n}\r\n}\r\nexport default blogerReducer;","let initialState = {\r\n    loginData: {\r\n        password: '',\r\n        email: ''\r\n    },\r\n    id : \"\"\r\n}\r\n\r\nconst loginPageReducer = (state = initialState,action) =>{\r\n    switch (action.type) {\r\n        case \"Login\":\r\n                    return {\r\n                        ...state,\r\n                        loginData: action.payload\r\n                    }\r\n                    case \"LOGOUT\" :\r\n                        return{\r\n                            ...state,\r\n                            id : ''\r\n                        }\r\n            default:\r\n                return state;\r\n}\r\n}\r\nexport default loginPageReducer;","\r\nlet initialState = {\r\n    registrationData : {\r\n        lastname: '',\r\n        username: '',\r\n        password: \"\",\r\n        email: ''\r\n    },\r\n}\r\n\r\nconst registrationPageReducer = (state = initialState,action) =>{\r\n    switch (action.type) {\r\n        case \"Registration\":\r\n            return {\r\n                ...state,\r\n                registrationData: action.payload\r\n            }\r\n            default:\r\n                return state;\r\n}\r\n}\r\nexport default registrationPageReducer;","let initialState = {\r\n    name: '',\r\n    newPost: {\r\n        description: '',\r\n        title: '',\r\n    },\r\n    modalShow: false,\r\n}\r\n\r\nconst workspacePageReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case \"Modal_Show\":\r\n            return {\r\n                ...state,\r\n                modalShow: true,\r\n            }\r\n            case \"Modal_Hide\":\r\n                return {\r\n                    ...state,\r\n                    modalShow: false,\r\n                }\r\n                case \"GetName\":\r\n                    return {\r\n                        ...state,\r\n                        name: action.payload\r\n                    }\r\n                    case \"New_Post\":\r\n                        return {\r\n                            ...state,\r\n                            newPost: action.payload\r\n                        }\r\n                default:\r\n                    return state;\r\n    }\r\n}\r\nexport default workspacePageReducer;","\r\nlet initialState = {\r\n    loading: true,\r\n}\r\n\r\nconst spinerReducer = (state = initialState,action) =>{\r\n    switch (action.type) {\r\n        case \"Spinner\" :\r\n            return{\r\n                ...state,\r\n                loading : false,\r\n            }\r\n            default:\r\n                return state;\r\n}\r\n}\r\nexport default spinerReducer;","let initialState = {\r\n    id : \"\"\r\n}\r\n\r\nconst userIDReducer = (state = initialState,action) =>{\r\n    switch (action.type) {\r\n                        case \"ID\" :\r\n                            return{\r\n                                ...state,\r\n                                id : action.payload\r\n                            }\r\n                            case \"REMOVE_ID\" :\r\n                                return{\r\n                                    ...state,\r\n                                    id : \"\"\r\n                                }\r\n            default:\r\n                return state;\r\n}\r\n}\r\nexport default userIDReducer;","\r\nlet initialState = {\r\n    posts: [{\r\n        author : '',\r\n        id : '',\r\n        description : '',\r\n        title : \"\"\r\n\r\n    }],\r\n}\r\n\r\nconst postReducer = (state = initialState,action) =>{\r\n    switch (action.type) {\r\n        case \"Fetch_Posts\":\r\n            return {\r\n                ...state,\r\n                posts: action.payload\r\n            }\r\n            default:\r\n                return state;\r\n}\r\n}\r\nexport default postReducer;","import {combineReducers} from 'redux';\r\nimport blogersReducer from './blogersReducer'\r\nimport loginPageReducer from './loginPageReducer';\r\nimport registrationPageReducer from './registrationPageReducer';\r\nimport workspacePageReducer from './workspacePageReducer';\r\nimport spinerReducer from './spinerReducer';\r\nimport userIDReducer from './userIDReducer';\r\nimport postReducer from './postsReducer';\r\n\r\n\r\nconst reducers = combineReducers({\r\n    blogers : blogersReducer,\r\n    posts : postReducer,\r\n    loginPage : loginPageReducer,\r\n    registrationPage : registrationPageReducer,\r\n    workspacePage : workspacePageReducer,\r\n    spinner : spinerReducer,\r\n    userID : userIDReducer,\r\n})\r\n\r\nexport default reducers;","import {createStore} from 'redux';\r\nimport reducers from \"../reducer/reducers\"\r\n\r\nconst store = createStore(reducers)\r\n\r\nexport default store;","import React from 'react';\r\nimport store from '../store/store.js';\r\nconst state = store.getState()\r\n\r\n\r\nconst context = React.createContext(state)\r\n\r\nexport default context;"," export default class Storage {\r\n    static set(key, data) {\r\n        try {\r\n            const value = JSON.stringify(data);\r\n            localStorage.setItem(key, value);\r\n        } catch (err) {\r\n            throw new Error(err.message);\r\n        }\r\n    }\r\n\r\n    static get(key) {\r\n        try {\r\n            const response = localStorage.getItem(key);\r\n            const data = JSON.parse(response) || null;\r\n            return data;\r\n        } catch (err) {\r\n            throw new Error(err.message);\r\n        }\r\n    }\r\n\r\n    static remove(key) {\r\n        try {\r\n            localStorage.removeItem(key);\r\n        } catch (err) {\r\n            throw new Error(err.message);\r\n        }\r\n    }\r\n}\r\n\r\n\r\n//export const id = Storage.get('user').id;\r\n\r\n","import Storage from '../services/storage';\r\n\r\nclass People {\r\n    \r\n    getPeople(){\r\n        return fetch('https://5d8e0901370f02001405c7c9.mockapi.io/api/v1/postblog/users')\r\n        .then(response => response.json())\r\n    }\r\n\r\n    login(data){\r\n      return fetch( \r\n            'https://it-blog-posts.herokuapp.com/api/people/login',\r\n            {\r\n              method: \"POST\", \r\n              body: JSON.stringify(data), \r\n              headers: {\r\n                'Content-Type': 'application/json' \r\n              }\r\n            }\r\n          )\r\n    }\r\n\r\n    registration(data){\r\n      return   fetch( \r\n        'https://it-blog-posts.herokuapp.com/api/people',\r\n        {\r\n          method: \"POST\", \r\n          body: JSON.stringify(data), \r\n          headers: {\r\n            'Content-Type': 'application/json' \r\n          }\r\n        }\r\n      )\r\n    }\r\n\r\n    byId(id){\r\n      return  fetch(`https://it-blog-posts.herokuapp.com/api/people/${id}`)\r\n      .then(data=>data.json())\r\n    }\r\n\r\n    logOut(data){\r\n      return fetch(`\"https://it-blog-posts.herokuapp.com/api/people/logout?access_token=${data}`,\r\n      {\r\n        method: \"POST\", \r\n        headers: {\r\n          'Content-Type': 'application/json' \r\n        }\r\n      }\r\n      )\r\n      //.then(response => console.log(response))\r\n      \r\n    }\r\n}\r\n\r\n\r\nexport default People;\r\n\r\n\r\n\r\n","class Post {\r\n\r\n    getPost() {\r\n        return fetch(`https://it-blog-posts.herokuapp.com/api/posts`)\r\n            .then(response => response.json())\r\n    }\r\n\r\n    post(data) {\r\n        return fetch(\r\n            'https://it-blog-posts.herokuapp.com/api/posts', {\r\n                method: \"POST\",\r\n                body: JSON.stringify(data),\r\n                headers: {\r\n                    'Content-Type': 'application/json'\r\n                }\r\n            }\r\n        )}\r\n\r\n        getPostById(id) {\r\n            return fetch(`https://it-blog-posts.herokuapp.com/api/people/${id}/posts`)\r\n                .then(response => response.json())  \r\n        }\r\n      \r\n        remove(id){\r\n            return fetch(`https://it-blog-posts.herokuapp.com/api/posts/${id}`,{\r\n                method: \"DELETE\",\r\n                headers: {\r\n                    'Content-Type': 'application/json'\r\n                }\r\n            }\r\n            )\r\n        }\r\n}\r\n\r\nexport default Post;","import People from \"./people\";\r\nimport Post from \"./post\";\r\n\r\n\r\n\r\n\r\nclass Api {\r\n    constructor() {\r\n      this.people = new People();\r\n      this.post = new Post();\r\n    }\r\n  }\r\n\r\n         const api = new Api();\r\n  export const getPeople = api.people.getPeople;\r\n  export const getPost = api.post.getPost;\r\n  export const login = api.people.login;\r\n  export const registration  = api.people.registration;\r\n  export const byId = api.people.byId;\r\n  export const post = api.post.post;\r\n  export const getPostById = api.post.getPostById;\r\n  export const logOut = api.people.logOut;\r\n  export const remove = api.post.remove;\r\n\r\n  \r\n\r\n","export const blogersFetchAction = (data) =>{\r\n    return {\r\n        type : \"Fetch_Blogers\",\r\n        payload : data\r\n\r\n    }\r\n}\r\n\r\nexport const postsFetchAction = (data) =>{\r\n    return {\r\n        type : \"Fetch_Posts\",\r\n        payload : data\r\n    }\r\n}","export const loginAction = (event,data) =>{\r\n    const { target: { name, value } } = event;\r\n    return {\r\n        type : 'Login',\r\n        payload : {...data,[name] : value}\r\n    }\r\n}\r\n\r\nexport const logOutAction = () =>{\r\n    return {\r\n        type: 'REMOVE_ID' \r\n    }\r\n}\r\n\r\nexport const idAction = (data) =>{\r\n    return {\r\n        type: 'ID',\r\n        payload: data.id \r\n    }\r\n}","\r\nexport const modalShowAction = () =>{\r\n    return{\r\n        type : \"Modal_Show\"\r\n    }\r\n}\r\n\r\nexport const modalHideAction = () =>{\r\n    return{\r\n        type : \"Modal_Hide\"\r\n    }\r\n}\r\n\r\nexport const getNameAction = (data) =>{\r\n    return {\r\n        type: 'GetName', \r\n        payload: `${data.lastname} ${data.username}` \r\n    }\r\n}\r\n\r\nexport const newPostAction = (event,data) =>{\r\n    const { target: { name, value } } = event;\r\n    return {\r\n        type: 'New_Post', \r\n        payload: { ...data, [name]: value }\r\n    }\r\n}","import React, {  useEffect,useContext } from 'react';\r\nimport context from '../../../context/context'\r\nimport './blogers.css';\r\nimport { Spinner } from 'react-bootstrap';\r\nimport { getPeople } from '../../../api/index';\r\nimport {blogersFetchAction,spinnerAction} from '../../../actions'\r\n\r\n\r\n\r\nconst Blogers = () => {\r\n    const {state,dispatch} = useContext(context)\r\n   \r\n    const {blogers} = state.blogers\r\n    const {loading} = state.spinner\r\n    useEffect(() => {\r\n        getPeople().then(function (data) {\r\n            dispatch(blogersFetchAction(data))\r\n            dispatch(spinnerAction())\r\n        });\r\n    }, [])\r\n    \r\n\r\n    return (\r\n        <div className=\"blogers\" >\r\n            <h2>Blogers</h2>\r\n            {loading && <Spinner animation=\"grow\" variant=\"danger\" className=\"spiner\" />}\r\n            {blogers.map((item) => {\r\n                return <div className='item-bloger' key={item.id}>\r\n                    <img src={item.avatar} alt=\"\" className=\"phot\" />\r\n                    <p> {item.name}</p>\r\n                </div>\r\n            })}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default React.memo(Blogers);;","export const spinnerAction = () =>{\r\n    return {\r\n        type : \"Spinner\"\r\n    }\r\n}","import React,{ useEffect,useContext} from 'react';\r\nimport context from '../../../context/context'\r\nimport {getPost} from '../../../api/index';\r\nimport {Spinner} from 'react-bootstrap';\r\nimport './post.css'\r\nimport {postsFetchAction,spinnerAction} from '../../../actions'\r\n\r\n\r\n\r\nconst Posts = () => {\r\n    const {state,dispatch} = useContext(context)\r\n    const {posts} = state.posts;\r\n    const {loading} = state.spinner\r\n\r\n    useEffect(()=>{\r\n        getPost().then(function (data) { \r\n            dispatch(postsFetchAction(data))\r\n            dispatch(spinnerAction())\r\n      });\r\n  },[])\r\n  \r\n    return(\r\n\r\n       <div className=\"contentpost\">\r\n            {loading  &&  <Spinner animation=\"grow\" variant=\"danger\" className=\"spiner\"/> }\r\n        {\r\n            posts.map((item)=>{\r\n             return   <div className='item' key={item.id}>\r\n                <div className='title'> <p>{item.author}</p>  <p>{item.title}</p>   </div>\r\n                <div className='discription'> {item.description}</div>\r\n                </div>\r\n            })\r\n        }\r\n       </div> \r\n    )\r\n}\r\n\r\n\r\nexport default React.memo(Posts);","import React from 'react';\r\nimport Blogers from \"./Blogers/Blogers\";\r\nimport Post from './Post/Posts';\r\nimport './Home.css'\r\n\r\nconst Home = () => {\r\n\r\n    return (\r\n        <div className=\"mainhome\">\r\n            <Blogers />\r\n            <Post />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default React.memo(Home);","import React, { useContext } from 'react';\r\nimport context from '../../context/context'\r\nimport { Button, Form } from 'react-bootstrap';\r\nimport { login,getPost } from '../../api/index';\r\nimport Storage from '../../services/storage';\r\nimport {loginAction,idAction,postsFetchAction} from '../../actions'\r\n\r\n\r\nimport './login.css'\r\n\r\n\r\nconst Login = (props) => {\r\n  const {state,dispatch} = useContext(context)\r\n    const {loginData} = state.loginPage;\r\n\r\n  const onSubmitForm = () => {\r\n    login(loginData)\r\n      .then(response => {\r\n        if (response.status !== 200) {\r\n          return alert(\"Unable to log in\")\r\n        }\r\n       return response.json()\r\n      })\r\n      .then(data => {\r\n        const info = ({ token: data.id, id: data.userId })\r\n        Storage.set('user', info)\r\n          dispatch(idAction(data))\r\n          getPost().then(function (data) {\r\n            dispatch(postsFetchAction(data))\r\n        });\r\n          props.history.push('/workspace')\r\n        }\r\n        )\r\n        .catch(error => {\r\n        console.log(error)\r\n      })\r\n  }\r\nconsole.log(state)\r\n  const hendleFormChange = (event) => {\r\n    dispatch(loginAction(event, loginData))\r\n  }\r\n\r\n  return (\r\n    <div className=\"logForm\">\r\n      <Form.Group controlId=\"formBasicEmail\">\r\n        <Form.Label>Email address</Form.Label>\r\n        <Form.Control name=\"email\" type=\"email\" placeholder=\"Enter email\" onChange={hendleFormChange} value={state.email} />\r\n      </Form.Group>\r\n\r\n      <Form.Group controlId=\"formBasicPassword\">\r\n        <Form.Label>Password</Form.Label>\r\n        <Form.Control name=\"password\" type=\"password\" placeholder=\"Password\" onChange={hendleFormChange} value={state.password} />\r\n      </Form.Group>\r\n\r\n      <Form.Group controlId=\"formBasicCheckbox\">\r\n        <Form.Check type=\"checkbox\" label=\"Remember me\" />\r\n      </Form.Group>\r\n      <Button variant=\"primary\" onClick={onSubmitForm}>Log In</Button>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default React.memo(Login);;\r\n\r\n\r\n","import React,{useContext,useEffect} from 'react';\r\nimport './nav.css';\r\nimport { Nav } from 'react-bootstrap';\r\nimport context from '../../context/context';\r\nimport Storage from '../../services/storage'\r\n\r\n\r\n\r\nconst Navigate = () => {\r\n    const {state} = useContext(context)\r\n  \r\n\r\n    return (\r\n        <Nav fill variant=\"tabs\"  >\r\n            <Nav.Item>\r\n                <Nav.Link href=\"#/home\" >Home</Nav.Link>\r\n            </Nav.Item>\r\n            {!state.userID.id ? <Nav.Item>\r\n                <Nav.Link href=\"#/login\"> Log In</Nav.Link>\r\n            </Nav.Item> : \r\n             <Nav.Item>\r\n                <Nav.Link href=\"#/logout\"> Log Out</Nav.Link>\r\n            </Nav.Item> }\r\n            <Nav.Item>\r\n                <Nav.Link href=\"#/registration\" >Registration</Nav.Link>\r\n            </Nav.Item>\r\n            <Nav.Item>\r\n                {state.userID.id &&<Nav.Link href=\"#/workspace\" >WorkSpace</Nav.Link>}\r\n            </Nav.Item>\r\n        </Nav>\r\n\r\n    )\r\n}\r\n\r\nexport default React.memo(Navigate);","import React, {  useContext } from \"react\";\r\nimport context from '../../context/context'\r\nimport { registration } from '../../api/index';\r\nimport { Button, Form } from 'react-bootstrap';\r\nimport './registration.css';\r\nimport {registrationAction} from '../../actions'\r\n\r\n\r\nconst Registration = (props) => {\r\n  const { state, dispatch } = useContext(context)\r\n  const { registrationData } = state.registrationPage;\r\n  const { lastname, username, password, email } = registrationData;\r\n\r\n  const onSubmitForm = () => {\r\n    registration(registrationData)\r\n      .then(response => {\r\n        if (response.status === 200) {\r\n          props.history.push('/login')\r\n          return response.json()\r\n        }\r\n      });\r\n\r\n  }\r\n\r\n  const hendleFormChange = (event) => {\r\n    dispatch(registrationAction(event,registrationData))\r\n  }\r\n\r\n  return (\r\n    <div className=\"logForm\">\r\n      <Form.Group controlId=\"formBasicLastName\">\r\n        <Form.Label>Last Name</Form.Label>\r\n        <Form.Control name=\"lastname\" type=\"email\" placeholder=\"Last Name\" onChange={hendleFormChange} value={lastname} />\r\n      </Form.Group>\r\n\r\n      <Form.Group controlId=\"formBasicUserName\">\r\n        <Form.Label>User Name</Form.Label>\r\n        <Form.Control name=\"username\" type=\"email\" placeholder=\"User Name\" onChange={hendleFormChange} value={username} />\r\n      </Form.Group>\r\n\r\n      <Form.Group controlId=\"formBasicEmail\">\r\n        <Form.Label>Email address</Form.Label>\r\n        <Form.Control name=\"email\" type=\"email\" placeholder=\"Enter email\" onChange={hendleFormChange} value={email} />\r\n      </Form.Group>\r\n\r\n      <Form.Group controlId=\"formBasicPassword\">\r\n        <Form.Label>Password</Form.Label>\r\n        <Form.Control name=\"password\" type=\"password\" placeholder=\"Password\" onChange={hendleFormChange} value={password} />\r\n      </Form.Group>\r\n\r\n      <Button variant=\"primary\" onClick={onSubmitForm}>Ok</Button>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default React.memo(Registration);;","export const registrationAction  = (event, data) => {\r\n    const { target: { name, value } } = event;\r\n    return {\r\n        type: 'Registration',\r\n         payload: { ...data, [name]: value }\r\n    }\r\n}","import React, { useEffect, useContext } from 'react';\r\nimport context from '../../context/context'\r\nimport { getPostById, getPost,remove } from '../../api/index';\r\nimport { Spinner,Button } from 'react-bootstrap';\r\nimport {postsFetchAction,spinnerAction} from '../../actions'\r\n\r\n\r\n\r\n\r\nconst Items = ({id}) => {\r\n    const { state, dispatch } = useContext(context)\r\n    const { posts } = state.posts;\r\n    const {loading} = state.spinner\r\n\r\n    \r\nconsole.log(posts,id)\r\n    useEffect(() => {\r\n            getPostById(id).then(function (data) {\r\n                dispatch(postsFetchAction(data))\r\n                dispatch(spinnerAction())\r\n            });\r\n    }, [posts])\r\n    \r\n\r\n    const removePost = (itemId)=>{\r\n        remove(itemId)\r\n        }\r\n    \r\n    return (\r\n        <div className=\"content\">\r\n            {loading && <Spinner animation=\"grow\" variant=\"danger\" className=\"spiner\" />}\r\n            {\r\n                posts.map((item) => {\r\n                    return <div className='item' key={item.id}>\r\n                        <div className='title'> <p>{item.author}</p>  <p>{item.title}</p>{id && <Button variant=\"danger\" onClick={()=> removePost(item.id)}  className='remove'> &times;</Button>}  </div>\r\n                        <div className='discription'> {item.description}</div>\r\n                    </div>\r\n                })\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default React.memo(Items);","import React, { useContext } from 'react';\r\nimport context from '../../context/context'\r\nimport { post } from '../../api/index';\r\nimport { Button, Modal, Form } from 'react-bootstrap';\r\nimport {newPostAction} from '../../actions'\r\n\r\nconst ModalWindow = ({ show, handleClose, name ,id}) => {\r\n    const { state, dispatch } = useContext(context)\r\n    const { newPost } = state.workspacePage;\r\n    const { description, title, } = newPost;\r\n    newPost.author = name;\r\n    newPost.personId = id;\r\n\r\n    const onSubmitForm = () => {\r\n        post(newPost);\r\n    }\r\n\r\n    const hendleFormChange = (event) => {\r\n        dispatch(newPostAction(event,newPost))\r\n        \r\n    }\r\n    return (\r\n        <Modal show={show} onHide={handleClose}>\r\n\r\n            <Modal.Header closeButton>\r\n                <Modal.Title>Create New Post</Modal.Title>\r\n            </Modal.Header>\r\n\r\n            <Modal.Body>\r\n                <Form.Group controlId=\"formBasicTitle\">\r\n                    <Form.Control name=\"title\" type=\"email\" placeholder=\"Title\" onChange={hendleFormChange} value={title} />\r\n                </Form.Group>\r\n                <Form.Group controlId=\"formBasic.ControlTextarea\">\r\n                    <Form.Control name=\"description\" as=\"textarea\" rows=\"3\" placeholder=\"Description\" onChange={hendleFormChange} value={description} />\r\n                </Form.Group>\r\n            </Modal.Body>\r\n\r\n            <Modal.Footer>\r\n                <Button variant=\"secondary\" onClick={handleClose}>\r\n                    Close\r\n        </Button>\r\n\r\n                <Button variant=\"primary\" onClick={() => { handleClose(); onSubmitForm() }}>\r\n                    Save\r\n            </Button>\r\n            </Modal.Footer>\r\n        </Modal>\r\n    )\r\n}\r\n\r\nexport default ModalWindow;","import React from 'react';\r\nimport { Button } from 'react-bootstrap';\r\n\r\nconst Header = ({handleShow, name, id}) => {\r\n    return(\r\n        <div className=\"main-header\">\r\n\r\n        <div className=\"info\">\r\n            <div className=\"photo\">\r\n                <img src=\"\" alt=\"\" />\r\n            </div>\r\n        <p className=\"name\">{name}</p>\r\n        </div>\r\n\r\n        <Button variant=\"dark\" onClick={handleShow}>\r\n            New Post\r\n    </Button>\r\n    </div>\r\n    )\r\n}\r\n\r\nexport default React.memo(Header);","import React, {  useEffect,useContext } from 'react';\r\nimport context from '../../context/context'\r\nimport './workspace.css'\r\nimport Items from './items';\r\nimport ModalWindow from './Modal';\r\nimport Header from './header'\r\nimport { byId,getPost } from '../../api';\r\nimport Storage from '../../services/storage'\r\nimport {getNameAction,modalShowAction,modalHideAction,postsFetchAction} from '../../actions'\r\n\r\n\r\nconst WorkSpace = () => {\r\n    const { state, dispatch } = useContext(context)\r\n    const {name, modalShow} = state.workspacePage;\r\n    const id = Storage.get('user').id;\r\n\r\n    const handleShow = () =>  dispatch(modalShowAction())\r\n    const handleClose =() => dispatch(modalHideAction())\r\n\r\n    useEffect(() => {\r\n        const user = Storage.get('user');\r\n        if (user) {\r\n            byId(user.id).then(data => {\r\n                dispatch(getNameAction(data));\r\n                \r\n            })\r\n        }\r\n    }, [])\r\n\r\n    return (\r\n        <div className=\"main\">\r\n            <Header handleShow={handleShow} name={name} id={id}/>\r\n            <ModalWindow show={modalShow} handleClose={handleClose} name={name} id={id} />\r\n            <Items id={id} />\r\n        </div >\r\n    )\r\n}\r\n\r\nexport default React.memo(WorkSpace);","import React from 'react';\r\nimport './footer.css'\r\n\r\nconst Footer = () => {\r\n    return (\r\n    <div className=\"footer\">\r\n    <p>Armenian Code Academy</p>\r\n    </div>\r\n    )\r\n} \r\n\r\nexport default Footer;","import React, { useContext } from 'react';\r\nimport Storage from '../../services/storage';\r\nimport context from '../../context/context'\r\nimport { logOut } from '../../api/index'\r\nimport { Button } from 'react-bootstrap';\r\nimport {logOutAction} from '../../actions';\r\nimport {rerender} from '../../index'\r\n\r\nconst LogOut = (props) => {\r\n    const {  dispatch } = useContext(context)\r\n\r\n    const userLogOut = () => {\r\n        const token = Storage.get('user').token\r\n        logOut(token).then(() => {\r\n            Storage.remove('user');\r\n            dispatch(logOutAction());\r\n            props.history.push('/home')\r\n        })\r\n    }\r\n\r\n    const cancelLogin = ()=>{\r\n        props.history.push('/home')\r\n    }\r\n    return (\r\n        <div className=\"logout\">\r\n            <div>Are You Shure</div>\r\n            <div className=\"btnloguot\">\r\n                <Button variant=\"dark\" onClick={cancelLogin}>Cancel</Button>\r\n                <Button variant=\"danger\" className=\"btnloguot\" onClick={userLogOut}>ok</Button>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default LogOut;","import React, {useContext, useReducer,useEffect} from 'react';\r\nimport Home from './screens/home/Home';\r\nimport Login from './screens/Login/Login';\r\nimport Navigate from './screens/nav/nav';\r\nimport Registration from './screens/Registration/Registration';\r\nimport WorkSpace from './screens/WorkSpace/WorkSpace';\r\nimport Footer from './screens/Footer/Footer';\r\nimport {BrowserRouter, Route,Router,HashRouter } from 'react-router-dom';\r\nimport context from './context/context';\r\nimport Storage from './services/storage'\r\nimport './App.css';\r\nimport {idAction} from './actions'\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport LogOut from './screens/Login/logout';\r\n\r\n\r\n\r\n\r\nfunction App(props) {\r\n const {dispatch,state} = props\r\n const {id} = state.userID\r\n  useEffect(() => {\r\n            const user = Storage.get('user');\r\n            if(user){\r\n            dispatch(idAction(user))\r\n            }\r\n        }\r\n  , [])\r\n  console.log(state)\r\n  return (\r\n  <HashRouter>\r\n    <context.Provider value={{state,dispatch}}>\r\n    <div className=\"App\">\r\n      <Navigate  id={id} />\r\n      <Route  path='/home'  render={()=> <Home/>}/>;\r\n      <Route  path='/login'  render={(routeprops)=> <Login  {...routeprops}/>}/>\r\n      <Route  path='/logout'  render={(routeprops)=> <LogOut  {...routeprops}/>}/>\r\n      <Route  path='/registration'  render={(routeprops)=> <Registration {...routeprops}/>}/>\r\n      <Route  path='/workspace'  render={()=> <WorkSpace/>}/>\r\n      <Route  path='/home'  render={()=> <Footer/>}/>\r\n    </div>\r\n    </context.Provider>\r\n  </HashRouter>\r\n  );\r\n}\r\n\r\nexport default App;\r\n\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css'\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport store from './store/store'\r\n\r\n export let rerender = (state) =>{{\r\n    ReactDOM.render(<App state={state} dispatch={store.dispatch.bind(store)} />, document.getElementById('root'));\r\n}}\r\n\r\nrerender(store.getState())\r\nstore.subscribe(()=>{\r\n    let state = store.getState()\r\n    rerender(state)\r\n})\r\n\r\nserviceWorker.unregister();\r\n\r\n"],"sourceRoot":""}